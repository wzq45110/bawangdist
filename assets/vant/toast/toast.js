"use strict";

var __assign = undefined && undefined.__assign || function () {
    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) {
                if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require('./../common/utils.js');
var defaultOptions = {
    type: 'text',
    mask: false,
    message: '',
    show: true,
    zIndex: 1000,
    duration: 3000,
    position: 'middle',
    forbidClick: false,
    loadingType: 'circular',
    selector: '#van-toast'
};
var queue = [];
var currentOptions = __assign({}, defaultOptions);
function parseOptions(message) {
    return utils_1.isObj(message) ? message : { message: message };
}
function getContext() {
    var pages = getCurrentPages();
    return pages[pages.length - 1];
}
function Toast(toastOptions) {
    var options = __assign(__assign({}, currentOptions), parseOptions(toastOptions));
    var context = options.context || getContext();
    var toast = context.selectComponent(options.selector);
    if (!toast) {
        console.warn('未找到 van-toast 节点，请确认 selector 及 context 是否正确');
        return;
    }
    delete options.context;
    delete options.selector;
    toast.clear = function () {
        toast.setData({ show: false });
        if (options.onClose) {
            options.onClose();
        }
    };
    queue.push(toast);
    toast.setData(options);
    clearTimeout(toast.timer);
    if (options.duration > 0) {
        toast.timer = setTimeout(function () {
            toast.clear();
            queue = queue.filter(function (item) {
                return item !== toast;
            });
        }, options.duration);
    }
    return toast;
}
var createMethod = function createMethod(type) {
    return function (options) {
        return Toast(__assign({ type: type }, parseOptions(options)));
    };
};
Toast.loading = createMethod('loading');
Toast.success = createMethod('success');
Toast.fail = createMethod('fail');
Toast.clear = function () {
    queue.forEach(function (toast) {
        toast.clear();
    });
    queue = [];
};
Toast.setDefaultOptions = function (options) {
    Object.assign(currentOptions, options);
};
Toast.resetDefaultOptions = function () {
    currentOptions = __assign({}, defaultOptions);
};
exports.default = Toast;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvYXN0LmpzIl0sIm5hbWVzIjpbIl9fYXNzaWduIiwiT2JqZWN0IiwiYXNzaWduIiwidCIsInMiLCJpIiwibiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJhcHBseSIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidXRpbHNfMSIsInJlcXVpcmUiLCJkZWZhdWx0T3B0aW9ucyIsInR5cGUiLCJtYXNrIiwibWVzc2FnZSIsInNob3ciLCJ6SW5kZXgiLCJkdXJhdGlvbiIsInBvc2l0aW9uIiwiZm9yYmlkQ2xpY2siLCJsb2FkaW5nVHlwZSIsInNlbGVjdG9yIiwicXVldWUiLCJjdXJyZW50T3B0aW9ucyIsInBhcnNlT3B0aW9ucyIsImlzT2JqIiwiZ2V0Q29udGV4dCIsInBhZ2VzIiwiZ2V0Q3VycmVudFBhZ2VzIiwiVG9hc3QiLCJ0b2FzdE9wdGlvbnMiLCJvcHRpb25zIiwiY29udGV4dCIsInRvYXN0Iiwic2VsZWN0Q29tcG9uZW50IiwiY29uc29sZSIsIndhcm4iLCJjbGVhciIsInNldERhdGEiLCJvbkNsb3NlIiwicHVzaCIsImNsZWFyVGltZW91dCIsInRpbWVyIiwic2V0VGltZW91dCIsImZpbHRlciIsIml0ZW0iLCJjcmVhdGVNZXRob2QiLCJsb2FkaW5nIiwic3VjY2VzcyIsImZhaWwiLCJmb3JFYWNoIiwic2V0RGVmYXVsdE9wdGlvbnMiLCJyZXNldERlZmF1bHRPcHRpb25zIiwiZGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsSUFBSUEsV0FBWSxhQUFRLFVBQUtBLFFBQWQsSUFBMkIsWUFBWTtBQUNsREEsZUFBV0MsT0FBT0MsTUFBUCxJQUFpQixVQUFTQyxDQUFULEVBQVk7QUFDcEMsYUFBSyxJQUFJQyxDQUFKLEVBQU9DLElBQUksQ0FBWCxFQUFjQyxJQUFJQyxVQUFVQyxNQUFqQyxFQUF5Q0gsSUFBSUMsQ0FBN0MsRUFBZ0RELEdBQWhELEVB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QUZvQztBQUVqQyxDQUZKO0FBR0FGLE1BQU1rQixPQUFOLEdBQWdCRCxhQUFhLFNBQWIsQ0FBaEI7QUFDQWpCLE1BQU1tQixPQUFOLEdBQWdCRixhQUFhLFNBQWIsQ0FBaEI7QUFDQWpCLE1BQU1vQixJQUFOLEdBQWFILGFBQWEsTUFBYixDQUFiO0FBQ0FqQixNQUFNUSxLQUFOLEdBQWMsWUFBWTtBQUN0QmYsVUFBTTRCLE9BQU4sQ0FBYyxVQUFVakIsS0FBVixFQUFpQjtBQUMzQkEsY0FBTUksS0FBTjtBQUNILEtBRkQ7QUFHQWYsWUFBUSxFQUFSO0FBQ0gsQ0FMRDtBQU1BTyxNQUFNc0IsaUJBQU4sR0FBMEIsVUFBVXBCLE9BQVYsRUFBbUI7QUFDekN0QyxXQUFPQyxNQUFQLENBQWM2QixjQUFkLEVBQThCUSxPQUE5QjtBQUNILENBRkQ7QUFHQUYsTUFBTXVCLG1CQUFOLEdBQTRCLFlBQVk7QUFDcEM3QixxQkFBaUIvQixTQUFTLEVBQVQsRUFBYW1CLGNBQWIsQ0FBakI7QUFDSCxDQUZEO0FBR0FKLFFBQVE4QyxPQUFSLEdBQWtCeEIsS0FBbEIiLCJmaWxlIjoidG9hc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgZnVuY3Rpb24gKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxyXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4uL2NvbW1vbi91dGlsc1wiKTtcclxudmFyIGRlZmF1bHRPcHRpb25zID0ge1xyXG4gICAgdHlwZTogJ3RleHQnLFxyXG4gICAgbWFzazogZmFsc2UsXHJcbiAgICBtZXNzYWdlOiAnJyxcclxuICAgIHNob3c6IHRydWUsXHJcbiAgICB6SW5kZXg6IDEwMDAsXHJcbiAgICBkdXJhdGlvbjogMzAwMCxcclxuICAgIHBvc2l0aW9uOiAnbWlkZGxlJyxcclxuICAgIGZvcmJpZENsaWNrOiBmYWxzZSxcclxuICAgIGxvYWRpbmdUeXBlOiAnY2lyY3VsYXInLFxyXG4gICAgc2VsZWN0b3I6ICcjdmFuLXRvYXN0J1xyXG59O1xyXG52YXIgcXVldWUgPSBbXTtcclxudmFyIGN1cnJlbnRPcHRpb25zID0gX19hc3NpZ24oe30sIGRlZmF1bHRPcHRpb25zKTtcclxuZnVuY3Rpb24gcGFyc2VPcHRpb25zKG1lc3NhZ2UpIHtcclxuICAgIHJldHVybiB1dGlsc18xLmlzT2JqKG1lc3NhZ2UpID8gbWVzc2FnZSA6IHsgbWVzc2FnZTogbWVzc2FnZSB9O1xyXG59XHJcbmZ1bmN0aW9uIGdldENvbnRleHQoKSB7XHJcbiAgICB2YXIgcGFnZXMgPSBnZXRDdXJyZW50UGFnZXMoKTtcclxuICAgIHJldHVybiBwYWdlc1twYWdlcy5sZW5ndGggLSAxXTtcclxufVxyXG5mdW5jdGlvbiBUb2FzdCh0b2FzdE9wdGlvbnMpIHtcclxuICAgIHZhciBvcHRpb25zID0gX19hc3NpZ24oX19hc3NpZ24oe30sIGN1cnJlbnRPcHRpb25zKSwgcGFyc2VPcHRpb25zKHRvYXN0T3B0aW9ucykpO1xyXG4gICAgdmFyIGNvbnRleHQgPSBvcHRpb25zLmNvbnRleHQgfHwgZ2V0Q29udGV4dCgpO1xyXG4gICAgdmFyIHRvYXN0ID0gY29udGV4dC5zZWxlY3RDb21wb25lbnQob3B0aW9ucy5zZWxlY3Rvcik7XHJcbiAgICBpZiAoIXRvYXN0KSB7XHJcbiAgICAgICAgY29uc29sZS53YXJuKCfmnKrmib7liLAgdmFuLXRvYXN0IOiKgueCue+8jOivt+ehruiupCBzZWxlY3RvciDlj4ogY29udGV4dCDmmK/lkKbmraPnoa4nKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBkZWxldGUgb3B0aW9ucy5jb250ZXh0O1xyXG4gICAgZGVsZXRlIG9wdGlvbnMuc2VsZWN0b3I7XHJcbiAgICB0b2FzdC5jbGVhciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0b2FzdC5zZXREYXRhKHsgc2hvdzogZmFsc2UgfSk7XHJcbiAgICAgICAgaWYgKG9wdGlvbnMub25DbG9zZSkge1xyXG4gICAgICAgICAgICBvcHRpb25zLm9uQ2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcXVldWUucHVzaCh0b2FzdCk7XHJcbiAgICB0b2FzdC5zZXREYXRhKG9wdGlvbnMpO1xyXG4gICAgY2xlYXJUaW1lb3V0KHRvYXN0LnRpbWVyKTtcclxuICAgIGlmIChvcHRpb25zLmR1cmF0aW9uID4gMCkge1xyXG4gICAgICAgIHRvYXN0LnRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRvYXN0LmNsZWFyKCk7XHJcbiAgICAgICAgICAgIHF1ZXVlID0gcXVldWUuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7IHJldHVybiBpdGVtICE9PSB0b2FzdDsgfSk7XHJcbiAgICAgICAgfSwgb3B0aW9ucy5kdXJhdGlvbik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG9hc3Q7XHJcbn1cclxudmFyIGNyZWF0ZU1ldGhvZCA9IGZ1bmN0aW9uICh0eXBlKSB7IHJldHVybiBmdW5jdGlvbiAob3B0aW9ucykge1xyXG4gICAgcmV0dXJuIFRvYXN0KF9fYXNzaWduKHsgdHlwZTogdHlwZSB9LCBwYXJzZU9wdGlvbnMob3B0aW9ucykpKTtcclxufTsgfTtcclxuVG9hc3QubG9hZGluZyA9IGNyZWF0ZU1ldGhvZCgnbG9hZGluZycpO1xyXG5Ub2FzdC5zdWNjZXNzID0gY3JlYXRlTWV0aG9kKCdzdWNjZXNzJyk7XHJcblRvYXN0LmZhaWwgPSBjcmVhdGVNZXRob2QoJ2ZhaWwnKTtcclxuVG9hc3QuY2xlYXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBxdWV1ZS5mb3JFYWNoKGZ1bmN0aW9uICh0b2FzdCkge1xyXG4gICAgICAgIHRvYXN0LmNsZWFyKCk7XHJcbiAgICB9KTtcclxuICAgIHF1ZXVlID0gW107XHJcbn07XHJcblRvYXN0LnNldERlZmF1bHRPcHRpb25zID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuICAgIE9iamVjdC5hc3NpZ24oY3VycmVudE9wdGlvbnMsIG9wdGlvbnMpO1xyXG59O1xyXG5Ub2FzdC5yZXNldERlZmF1bHRPcHRpb25zID0gZnVuY3Rpb24gKCkge1xyXG4gICAgY3VycmVudE9wdGlvbnMgPSBfX2Fzc2lnbih7fSwgZGVmYXVsdE9wdGlvbnMpO1xyXG59O1xyXG5leHBvcnRzLmRlZmF1bHQgPSBUb2FzdDtcclxuIl19